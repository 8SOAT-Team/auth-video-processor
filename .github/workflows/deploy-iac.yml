name: Terraform Apply/Destroy

on:
  workflow_dispatch:
    inputs:
      module:
        description: "Escolha o módulo para aplicar o Terraform"
        required: true
        type: choice
        options:
          - serverless
      action:
        description: "Escolha a ação (apply ou destroy)"
        required: true
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.4

      - name: Configure Terraform Authentication
        env:
          HASHICORP_TOKEN: ${{ secrets.HASHICORP_TOKEN }}
        run: |
          mkdir -p ~/.terraform.d
          echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"$HASHICORP_TOKEN\"}}}" > ~/.terraform.d/credentials.tfrc.json

      - name: Build Lambda .zip files
        run: |
          # Build login.zip (sem dependência externa)
          cd terraform/serverless/lambda/login
          zip ../../lambda_login.zip lambda_login.py
          cd -

          # Build signup.zip com psycopg2-binary
          cd terraform/serverless/lambda/signup
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install psycopg2-binary -t .
          zip -r ../../lambda_signup.zip .
          deactivate
          cd -

      - name: Terraform Init and Apply/Destroy
        working-directory: terraform/${{ github.event.inputs.module }}
        run: |
          terraform init
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve
          else
            terraform destroy -auto-approve
          fi
