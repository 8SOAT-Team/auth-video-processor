name: Terraform Apply/Destroy

on:
  workflow_dispatch:
    inputs:
      module:
        description: "Escolha o módulo para aplicar o Terraform"
        required: true
        type: choice
        options:
          - serverless
      action:
        description: "Escolha a ação (apply ou destroy)"
        required: true
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.4

      - name: Configure Terraform Authentication
        env:
          HASHICORP_TOKEN: ${{ secrets.HASHICORP_TOKEN }}
        run: |
          mkdir -p ~/.terraform.d
          echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"$HASHICORP_TOKEN\"}}}" > ~/.terraform.d/credentials.tfrc.json

      - name: Build Lambda .zip files with psycopg2 via Docker
        run: |
          mkdir -p build/signup && mkdir -p build/login

          # Copia os scripts para build local
          cp terraform/serverless/lambda/signup/lambda_signup.py build/signup/
          cp terraform/serverless/lambda/login/lambda_login.py build/login/

          # Instala psycopg2-binary em ambiente compatível com Lambda (Amazon Linux 2 + Python 3.9)
          docker run --rm -v "$PWD/build/signup":/var/task lambci/lambda:build-python3.9 \
            pip install psycopg2-binary -t .

          # Empacota o ZIP da signup com psycopg2 incluído
          cd build/signup
          zip -r ../../terraform/serverless/lambda_signup.zip .
          cd -

          # Empacota o ZIP da login (sem dependências extras)
          cd build/login
          zip -r ../../terraform/serverless/lambda_login.zip .
          cd -

      - name: Terraform Init and Apply/Destroy
        working-directory: terraform/${{ github.event.inputs.module }}
        run: |
          terraform init
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve
          else
            terraform destroy -auto-approve
          fi
